[{"C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\reportWebVitals.js":"3","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Like.js":"4","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Home.js":"5","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Intro.js":"6","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Order.js":"7","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\PageBtn.js":"8","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\TypeBox.js":"9","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Modal.js":"10"},{"size":499,"mtime":1676513248420,"results":"11","hashOfConfig":"12"},{"size":7355,"mtime":1676513248405,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1676513248420,"results":"14","hashOfConfig":"12"},{"size":3150,"mtime":1676513248405,"results":"15","hashOfConfig":"12"},{"size":3094,"mtime":1676513248405,"results":"16","hashOfConfig":"12"},{"size":832,"mtime":1676513248405,"results":"17","hashOfConfig":"12"},{"size":532,"mtime":1676513248405,"results":"18","hashOfConfig":"12"},{"size":1151,"mtime":1676513248405,"results":"19","hashOfConfig":"12"},{"size":4009,"mtime":1676513248405,"results":"20","hashOfConfig":"12"},{"size":3552,"mtime":1676513248405,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e9y5ph",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\index.js",[],[],"C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\App.js",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77"],[],"import \"./style.css\";\r\nimport logo from \"./img/logo.png\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Route, Routes, Link, BrowserRouter } from \"react-router-dom\";\r\nimport axios, { all } from \"axios\";\r\nimport Home from \"./component/Home\";\r\nimport Intro from \"./component/Intro\";\r\nimport Like from \"./component/Like\";\r\n\r\nfunction App() {\r\n  const [poData, setpoData] = useState([]); /* 포켓몬 기본 데이터 배열 */\r\n  const [searched, setSear] = useState([]); /* 포켓몬 type 배열 */\r\n  const [itemCount, setitemCount] = useState(15); /* 표시할 아이템 수 */\r\n  const [page, setPage] = useState(1); /* 페이지 */\r\n  const pageOffset = (page - 1) * itemCount; /* 페이지 오프셋  */\r\n  const [like, setLike] = useState([]); /* 좋아요 배열 */\r\n  const [typeShow, setShow] = useState(false); /* type 토글 */\r\n\r\n  const [useInput, setInput] = useState(\"\"); /* 검색 input value */\r\n  const baseUrl = \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=151/\";\r\n\r\n  const numPage = Math.ceil(\r\n    searched.filter((item) => item.name.toLowerCase().includes(useInput))\r\n      .length / itemCount\r\n  ); /* 페이지 버튼 수 */\r\n\r\n  const getValue = (e) => {\r\n    setInput(e.target.value.toLowerCase());\r\n  }; /* 검색 input Value 값 */\r\n\r\n  const pokeApi = async () => {\r\n    let data = await axios.get(baseUrl);\r\n    getData(data.data.results);\r\n  }; /* 포켓몬 api 기본 */\r\n\r\n  function getData(res) {\r\n    res.map(async (gep) => {\r\n      const gel = await axios.get(gep.url);\r\n      setpoData((state) => {\r\n        state = [...state, gel.data];\r\n        return state.sort((a, b) => {\r\n          return a.id - b.id;\r\n        });\r\n      });\r\n    });\r\n  } /* 포켓몬 api 상세정보 */\r\n\r\n  function getType(res) {\r\n    if (res == \"전체\") {\r\n      setSear(poData);\r\n    } else {\r\n      setSear(\r\n        poData.filter(\r\n          (a) =>\r\n            a.types.length > 0 &&\r\n            (a.types[0].type.name === res ||\r\n              (a.types.length > 1 && a.types[1].type.name === res))\r\n        )\r\n      );\r\n    }\r\n  } /* 타입 */\r\n\r\n  function getOrder(res) {\r\n    setSear((state) => {\r\n      return [...state].sort((a, b) => {\r\n        if (res == \"기본\") {\r\n          return a.id - b.id;\r\n        } else if (res == \"아이디높\") {\r\n          return b.id - a.id;\r\n        } else if (res == \"크기낮\") {\r\n          return a.height - b.height;\r\n        } else if (res == \"크기높\") {\r\n          return b.height - a.height;\r\n        } else if (res == \"무게낮\") {\r\n          return a.weight - b.weight;\r\n        } else if (res == \"무게높\") {\r\n          return b.weight - a.weight;\r\n        }\r\n      });\r\n    });\r\n    setLike((state) => {\r\n      return [...state].sort((a, b) => {\r\n        if (res == \"기본\") {\r\n          return a.id - b.id;\r\n        } else if (res == \"아이디높\") {\r\n          return b.id - a.id;\r\n        } else if (res == \"크기낮\") {\r\n          return a.height - b.height;\r\n        } else if (res == \"크기높\") {\r\n          return b.height - a.height;\r\n        } else if (res == \"무게낮\") {\r\n          return a.weight - b.weight;\r\n        } else if (res == \"무게높\") {\r\n          return b.weight - a.weight;\r\n        }\r\n      });\r\n    });\r\n  } /* 정렬 */\r\n\r\n  function allBtn() {\r\n    setSear(poData);\r\n    setShow(false);\r\n  } /* all 홈 */\r\n\r\n  const typeBtn = () => {\r\n    setShow(!typeShow);\r\n  }; /* type 토글 */\r\n\r\n  function introOpen() {\r\n    const introBox = document.querySelector(\".intro_box\");\r\n    const introBottom = document.querySelector(\".intro_bottom\");\r\n    const introButton = document.querySelector(\".intro_button\");\r\n    introBox.classList.add(\"intro_box_open\");\r\n    introBottom.classList.add(\"intro_bottom_open\");\r\n    introButton.classList.add(\"intro_button_open\");\r\n    setSear(poData);\r\n  } /* intro 오픈 */\r\n\r\n  function introClose() {\r\n    const introBox = document.querySelector(\".intro_box\");\r\n    const introBottom = document.querySelector(\".intro_bottom\");\r\n    const introButton = document.querySelector(\".intro_button\");\r\n    introBox.classList.remove(\"intro_box_open\");\r\n    introBottom.classList.remove(\"intro_bottom_open\");\r\n    introButton.classList.remove(\"intro_button_open\");\r\n  } /* intro 클로즈 */\r\n\r\n  const getLike = (id) => {\r\n    let ids = searched.find((res) => res.id === id);\r\n    let newLike = [...like];\r\n    if (newLike.includes(ids)) {\r\n      newLike = newLike.filter((item) => item !== ids);\r\n    } else {\r\n      newLike.push(ids);\r\n    }\r\n    setLike(newLike);\r\n  }; /* 좋아요 추가/삭제 */\r\n\r\n  const clearLike = () => {\r\n    setLike([]);\r\n  }; /* 좋아요 전부삭제 */\r\n\r\n  const colorMap = {\r\n    fire: \"#DD570C\",\r\n    water: \"#2622FF\",\r\n    ice: \"#5BD7F2\",\r\n    normal: \"#34332C\",\r\n    fighting: \"#C00000\",\r\n    electric: \"#FFD622\",\r\n    grass: \"#6CE987\",\r\n    poison: \"#64316C\",\r\n    ground: \"#E0C068\",\r\n    flying: \"#3B4F95\",\r\n    psychic: \"#FF50D8\",\r\n    bug: \"#1F632E\",\r\n    ghost: \"#331238\",\r\n    rock: \"#685100\",\r\n    dragon: \"#4B6E87\",\r\n    steel: \"#727272\",\r\n    fairy: \"#E1A2A2\",\r\n  }; /* 컬러맵 */\r\n\r\n  useEffect(() => {\r\n    pokeApi();\r\n    getOrder();\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <article className=\"main\">\r\n        <div className=\"content_box\">\r\n          <div className=\"side_menu\">\r\n            <h1 className=\"logo\" onClick={introClose}>\r\n              <img src={logo} />\r\n            </h1>\r\n            <ul className=\"menu_list\">\r\n              <li>\r\n                <Link to=\"/\" onClick={allBtn}>\r\n                  HOME\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to=\"/\"\r\n                  onClick={(e) => {\r\n                    allBtn(e);\r\n                    typeBtn(e);\r\n                  }}\r\n                >\r\n                  <span>TYPE</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/like\">LIKE</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <Intro introOpen={introOpen} />\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                <Home\r\n                  getValue={getValue}\r\n                  searched={searched}\r\n                  pageOffset={pageOffset}\r\n                  itemCount={itemCount}\r\n                  getType={getType}\r\n                  useInput={useInput}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  numPage={numPage}\r\n                  getOrder={getOrder}\r\n                  typeShow={typeShow}\r\n                  typeBtn={typeBtn}\r\n                  like={like}\r\n                  setLike={setLike}\r\n                  colorMap={colorMap}\r\n                  getLike={getLike}\r\n                />\r\n              }\r\n            ></Route>\r\n            <Route\r\n              path=\"/like\"\r\n              element={\r\n                <Like\r\n                  like={like}\r\n                  colorMap={colorMap}\r\n                  getLike={getLike}\r\n                  getValue={getValue}\r\n                  useInput={useInput}\r\n                  getOrder={getOrder}\r\n                  clearLike={clearLike}\r\n                />\r\n              }\r\n            />\r\n          </Routes>\r\n        </div>\r\n      </article>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\reportWebVitals.js",[],[],"C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Like.js",["78","79","80","81"],[],"import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport seachicon from \"../img/seachicon.svg\";\r\nimport likeDel from \"../img/likeDel.svg\";\r\nimport Order from \"./Order\";\r\n\r\nexport default function Like({\r\n  like,\r\n  colorMap,\r\n  getLike,\r\n  useInput,\r\n  getValue,\r\n  getOrder,\r\n  clearLike,\r\n}) {\r\n  const settings = {\r\n    infinite: false,\r\n    arrows: false,\r\n    vertical: true,\r\n    verticalSwiping: true,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 2,\r\n  };\r\n  return (\r\n    <div className=\"like_page\">\r\n      <div className=\"like_head_box\">\r\n        <h2>Your Like</h2>\r\n        <div className=\"like_search_box\">\r\n          <input placeholder=\"Name\" onChange={getValue}></input>\r\n          <div>\r\n            <img src={seachicon}></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span>{like.length} pokemon</span>\r\n      <div className=\"like_head_line\"></div>\r\n\r\n      {like.length ? (\r\n        <Slider {...settings} className=\"like_content\">\r\n          {like\r\n            .filter((item) => item.name.toLowerCase().includes(useInput))\r\n            .map((res) => {\r\n              return (\r\n                <div key={res.id} className=\"like_item\">\r\n                  <div className=\"a2\">\r\n                    <div\r\n                      className=\"like_content_img\"\r\n                      style={{\r\n                        backgroundColor: colorMap[res.types[0].type.name] || \"\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={res.sprites.other.dream_world.front_default}\r\n                      ></img>\r\n                    </div>\r\n                    <div className=\"like_content_info\">\r\n                      <ul className=\"like_content_infoTop\">\r\n                        <li>\r\n                          <h3>{res.name}</h3>\r\n                          <span>{res.types[0].type.name}</span>\r\n                          <span>{res.types[1] && res.types[1].type.name}</span>\r\n                        </li>\r\n                        <li>\r\n                          <span>{(res.weight / 10).toFixed(1)}kg</span>\r\n                          <span>{(res.height / 10).toFixed(1)}m</span>\r\n                        </li>\r\n\r\n                        <li>{res.id < 10 ? `0${res.id}` : `${res.id}`}</li>\r\n                      </ul>\r\n                      <ul className=\"like_content_infoBottom\">\r\n                        <li>\r\n                          <span>pokemon encyclopedia</span>\r\n                        </li>\r\n                        <li onClick={() => getLike(res.id)}>\r\n                          <img src={likeDel} />\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </Slider>\r\n      ) : (\r\n        <div className=\"noLike\">\r\n          <p>좋아하는 포켓몬을 추가하세요.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"like_foot_box\">\r\n        <div className=\"allBtn\" onClick={clearLike}>\r\n          All Delete\r\n        </div>\r\n        <Order getOrder={getOrder} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Home.js",["82","83","84"],[],"import { Component, useState } from \"react\";\r\nimport seachicon from \"../img/seachicon.svg\";\r\nimport Modal from \"./Modal\";\r\nimport Order from \"./Order\";\r\nimport PageBtn from \"./PageBtn\";\r\nimport TypeBox from \"./TypeBox\";\r\n\r\nexport default function Home({\r\n  searched,\r\n  pageOffset,\r\n  itemCount,\r\n  getType,\r\n  getValue,\r\n  useInput,\r\n  page,\r\n  numPage,\r\n  setPage,\r\n  getOrder,\r\n  typeShow,\r\n  typeBtn,\r\n  like,\r\n  setLike,\r\n  colorMap,\r\n  getLike,\r\n}) {\r\n  const [modalVi, setmodalVi] = useState(\"\");\r\n\r\n  const onModalHandler = (id) => {\r\n    setmodalVi(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"items\">\r\n      <div className=\"items_head_box\">\r\n        <h2>PokeMon Encyclopedia Web</h2>\r\n        <div className=\"search_box\">\r\n          <input placeholder=\"Name\" onChange={getValue}></input>\r\n          <div>\r\n            <img src={seachicon}></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ul className=\"item_list\">\r\n        {searched\r\n          .filter((item) => item.name.toLowerCase().includes(useInput))\r\n          .slice(pageOffset, pageOffset + itemCount)\r\n          .map((res) => {\r\n            return (\r\n              <li\r\n                key={res.id}\r\n                onClick={() => {\r\n                  onModalHandler(res.id);\r\n                }}\r\n              >\r\n                <div>{res.id}</div>\r\n                <img src={res.sprites.other.dream_world.front_default}></img>\r\n                <section className=\"text_box\">\r\n                  <h3>{res.name}</h3>\r\n                  <div\r\n                    className=\"elo\"\r\n                    style={{\r\n                      backgroundColor: colorMap[res.types[0].type.name] || \"\",\r\n                    }}\r\n                  >\r\n                    {res.types[0].type.name}\r\n                  </div>\r\n                  <div\r\n                    className={res.types[1] ? \"elo\" : \"\"}\r\n                    style={{\r\n                      backgroundColor:\r\n                        colorMap[res.types[1] && res.types[1].type.name] || \"\",\r\n                    }}\r\n                  >\r\n                    {res.types[1] && res.types[1].type.name}\r\n                  </div>\r\n                </section>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n\r\n      <TypeBox getType={getType} typeShow={typeShow} typeBtn={typeBtn} />\r\n\r\n      {searched.map((res) => (\r\n        <Modal\r\n          key={res.id}\r\n          id={res.id}\r\n          name={res.name}\r\n          typesA={res.types[0].type.name}\r\n          typesB={res.types[1] && res.types[1].type.name}\r\n          infoWeight={res.weight}\r\n          infoHeight={res.height}\r\n          modalVi={modalVi}\r\n          setmodalVi={setmodalVi}\r\n          searched={searched}\r\n          photo={res.sprites.other.dream_world.front_default}\r\n          colorMap={colorMap}\r\n          like={like}\r\n          setLike={setLike}\r\n          getLike={getLike}\r\n        />\r\n      ))}\r\n\r\n      <div className=\"foot_box\">\r\n        <PageBtn setPage={setPage} numPage={numPage} page={page} />\r\n        <Order getOrder={getOrder} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Intro.js",["85","86","87","88"],[],"import introLine from \"../img/introLine.png\";\r\nimport introB from \"../img/introbottom.png\";\r\nimport introArrow from \"../img/introarrow.png\";\r\nimport introLogo from \"../img/introLogo.png\";\r\n\r\nexport default function Intro({ introOpen }) {\r\n  return (\r\n    <>\r\n      <div className=\"intro_box\">\r\n        <div className=\"intro_logo\">\r\n          <img src={introLogo} />\r\n        </div>\r\n        <div className=\"intro_line\">\r\n          <img src={introLine} />\r\n          <div className=\"intro_here\">\r\n            <img src={introArrow} />\r\n            <span>Click</span>\r\n          </div>\r\n          <div className=\"intro_button\" onClick={introOpen}></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"intro_bottom\">\r\n        <img src={introB} />\r\n        <span> PokeMon Encyclopedia Web</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Order.js",[],[],"C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\PageBtn.js",["89","90"],[],"import arrowR from \"../img/arrow-r.svg\";\r\nimport arrowL from \"../img/arrow-l.svg\";\r\n\r\nexport default function PageBtn({ setPage, numPage, page, getOrder }) {\r\n  return (\r\n    <div className=\"pageBtn\">\r\n      <button\r\n        className=\"arrowbtn\"\r\n        onClick={() => {\r\n          setPage(page - 1);\r\n        }}\r\n        disabled={page === 1}\r\n        style={{ display: numPage < 1 ? \"none\" : \"\" }}\r\n      >\r\n        <img src={arrowL}></img>\r\n      </button>\r\n      {Array(numPage)\r\n        .fill()\r\n        .map((_, i) => {\r\n          return (\r\n            <button\r\n              className=\"tebtn\"\r\n              key={i + 1}\r\n              onClick={() => {\r\n                setPage(i + 1);\r\n              }}\r\n              aria-current={page === i + 1 ? \"tebtn\" : null}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          );\r\n        })}\r\n\r\n      <button\r\n        className=\"arrowbtn\"\r\n        onClick={() => {\r\n          setPage(page + 1);\r\n        }}\r\n        style={{ display: numPage < 1 ? \"none\" : \"\" }}\r\n        disabled={page === numPage}\r\n      >\r\n        <img src={arrowR}></img>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\TypeBox.js",[],[],"C:\\Users\\Administrator\\Desktop\\frontWeb_김형재\\포켓몬\\pokemon\\src\\component\\Modal.js",["91","92"],[],"import { useState } from \"react\";\r\n\r\nexport default function Modal({\r\n  name,\r\n  modalVi,\r\n  setmodalVi,\r\n  searched,\r\n  id,\r\n  photo,\r\n  typesA,\r\n  typesB,\r\n  colorMap,\r\n  infoWeight,\r\n  infoHeight,\r\n  like,\r\n  setLike,\r\n  getLike,\r\n}) {\r\n  const onCloseHandler = () => {\r\n    setmodalVi(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modals\"\r\n        style={modalVi === id ? { display: \"block\" } : { display: \"none\" }}\r\n        onClick={onCloseHandler}\r\n      ></div>\r\n      <div\r\n        className=\"modal_item\"\r\n        style={modalVi === id ? { display: \"block\" } : { display: \"none\" }}\r\n      >\r\n        <div className=\"blackLine\"></div>\r\n        <div className=\"redLine\"></div>\r\n        <div className=\"modal_content\">\r\n          <ul>\r\n            <li className=\"modal_left_textBox\">\r\n              <div className=\"modal_id\"> {id < 10 ? `0${id}` : `${id}`} </div>\r\n              <span>{name.toUpperCase()}</span>\r\n\r\n              <p>\r\n                Lorem Ipsum is simply dummy text of the printing <br />\r\n                and typesetting industry. Lorem Ipsum has been\r\n              </p>\r\n              <div className=\"modal_types\">\r\n                <div\r\n                  className=\"modal_type1\"\r\n                  style={{\r\n                    backgroundColor: colorMap[typesA] || \"\",\r\n                  }}\r\n                >\r\n                  {typesA}\r\n                </div>\r\n                <div\r\n                  className=\"modal_type2\"\r\n                  style={{\r\n                    backgroundColor: colorMap[typesB] || \"\",\r\n                  }}\r\n                >\r\n                  {typesB}\r\n                </div>\r\n                <div className=\"modal_info\">\r\n                  <span>{(infoWeight / 10).toFixed(1)}kg</span>\r\n                  <span>{(infoHeight / 10).toFixed(1)}m</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"modal_right_img\">\r\n              <div>\r\n                <img src={photo}></img>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <span className=\"modal_like\">\r\n            <svg\r\n              width=\"14\"\r\n              height=\"13\"\r\n              viewBox=\"0 0 14 13\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                onClick={() => {\r\n                  getLike(id);\r\n                }}\r\n                id=\"likeicon\"\r\n                d=\"M7.43422 2.34595L7.04836 3.02183L6.59404 2.38993C5.92649 1.46147 5.21166 0.943459 4.54251 0.719436C3.87806 0.49699 3.22556 0.552381 2.64236 0.827748C1.46621 1.38309 0.499999 2.88492 0.499999 4.96213C0.499999 7.01329 1.31328 8.33969 2.55014 9.4408C3.17937 10.001 3.91887 10.5025 4.72876 11.009C5.03797 11.2024 5.36297 11.3997 5.69509 11.6014C6.12312 11.8613 6.56298 12.1284 6.99614 12.4035C7.49266 12.0794 7.99204 11.7719 8.47402 11.475C8.75212 11.3037 9.02443 11.136 9.28704 10.9707C10.1005 10.4589 10.839 9.96006 11.4661 9.40516C12.6967 8.31624 13.5 7.01346 13.5 4.96213C13.5 2.90797 12.4311 1.34615 11.178 0.759102C10.5573 0.468329 9.89303 0.414059 9.26276 0.638398C8.63105 0.86325 7.98173 1.38694 7.43422 2.34595Z\"\r\n                fill={like.find((res) => res.id === id) ? \"#d8292c\" : \"#D4D2D2\"}\r\n                stroke=\"black\"\r\n              />\r\n            </svg>\r\n            <span\r\n              onClick={() => {\r\n                getLike(id);\r\n              }}\r\n            >\r\n              LIKE\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"93","severity":1,"message":"94","line":3,"column":31,"nodeType":"95","messageId":"96","endLine":3,"endColumn":37},{"ruleId":"93","severity":1,"message":"97","line":5,"column":17,"nodeType":"95","messageId":"96","endLine":5,"endColumn":20},{"ruleId":"93","severity":1,"message":"98","line":13,"column":21,"nodeType":"95","messageId":"96","endLine":13,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":49,"column":13,"nodeType":"101","messageId":"102","endLine":49,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":65,"column":37,"nodeType":"105","messageId":"106","endLine":65,"endColumn":39},{"ruleId":"99","severity":1,"message":"100","line":66,"column":17,"nodeType":"101","messageId":"102","endLine":66,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":68,"column":24,"nodeType":"101","messageId":"102","endLine":68,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":70,"column":24,"nodeType":"101","messageId":"102","endLine":70,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":72,"column":24,"nodeType":"101","messageId":"102","endLine":72,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":74,"column":24,"nodeType":"101","messageId":"102","endLine":74,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":76,"column":24,"nodeType":"101","messageId":"102","endLine":76,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":82,"column":37,"nodeType":"105","messageId":"106","endLine":82,"endColumn":39},{"ruleId":"99","severity":1,"message":"100","line":83,"column":17,"nodeType":"101","messageId":"102","endLine":83,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":85,"column":24,"nodeType":"101","messageId":"102","endLine":85,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":87,"column":24,"nodeType":"101","messageId":"102","endLine":87,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":89,"column":24,"nodeType":"101","messageId":"102","endLine":89,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":91,"column":24,"nodeType":"101","messageId":"102","endLine":91,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":93,"column":24,"nodeType":"101","messageId":"102","endLine":93,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":166,"column":6,"nodeType":"109","endLine":166,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":174,"column":15,"nodeType":"113","endLine":174,"endColumn":33},{"ruleId":"93","severity":1,"message":"114","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":31,"column":13,"nodeType":"113","endLine":31,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":52,"column":23,"nodeType":"113","endLine":54,"endColumn":24},{"ruleId":"111","severity":1,"message":"112","line":75,"column":27,"nodeType":"113","endLine":75,"endColumn":48},{"ruleId":"93","severity":1,"message":"114","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":39,"column":13,"nodeType":"113","endLine":39,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":56,"column":17,"nodeType":"113","endLine":56,"endColumn":72},{"ruleId":"111","severity":1,"message":"112","line":11,"column":11,"nodeType":"113","endLine":11,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":14,"column":11,"nodeType":"113","endLine":14,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":16,"column":13,"nodeType":"113","endLine":16,"endColumn":37},{"ruleId":"111","severity":1,"message":"112","line":24,"column":9,"nodeType":"113","endLine":24,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":15,"column":9,"nodeType":"113","endLine":15,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":42,"column":9,"nodeType":"113","endLine":42,"endColumn":27},{"ruleId":"93","severity":1,"message":"115","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":71,"column":17,"nodeType":"113","endLine":71,"endColumn":34},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'all' is defined but never used.","'setitemCount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pokeApi'. Either include it or remove the dependency array.","ArrayExpression",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'useState' is defined but never used.",{"desc":"117","fix":"118"},"Update the dependencies array to be: [pokeApi]",{"range":"119","text":"120"},[4900,4902],"[pokeApi]"]